heat_template_version: 2013-05-23

description: >
  HOT template to deploy a server into an existing neutron tenant network and
  assign floating IP addresse so it is routable from the public network.
parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    description: Name of image to use for servers
    default: "cirros-0.3.3-x86_64"
  flavor:
    type: string
    description: Flavor to use for servers
    default: "m1.tiny"
  priv_net:
    type: string
    description: name/ID of private network into which servers get deployed
  pub_net:
    type: string
    description: ID of public network into which servers get deployed
    default: "ext-net"
  vol_size:
    type: number
    description: Size of the volume to attach to the istance
    default: 1

resources:
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - network: { get_param: priv_net }
      security_groups: [ "mySecurity" ]

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: pub_net }
      port_id: {get_attr: [server, addresses, { get_param: priv_net }, 0, port]}

  storage_volume:
    type: OS::Cinder::Volume
    properties:
      name: { get_param: "OS::stack_name" }
      size: { get_param: vol_size }

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: storage_volume }
      instance_uuid: { get_resource: server }

outputs:
  server_private_ip:
    description: IP address of server in private network
    value: { get_attr: [ server, first_address ] }
  server_public_ip:
    description: Floating IP address of server in public network
    value: { get_attr: [ server_floating_ip, floating_ip_address ] }
